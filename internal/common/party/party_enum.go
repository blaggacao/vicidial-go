// GENERATED BY magnum, DO NOT EDIT

package party

import (
	"fmt"
)

// LocalPartyTypes returns all possible LocalPartyTypes.
func LocalPartyTypes() []LocalPartyType {
	return []LocalPartyType{Agent(), Service()}
}

// NewLocalPartyType returns the LocalPartyType for the given name.
func NewLocalPartyType(name string) (LocalPartyType, error) {
	switch name {
	case "agent":
		return Agent(), nil
	case "service":
		return Service(), nil
	default:
		return LocalPartyType{}, fmt.Errorf("unknown name: %s", name)
	}
}

// Agent returns the "agent" LocalPartyType.
func Agent() LocalPartyType {
	return LocalPartyType{
		name: "agent",
	}
}

// Service returns the "service" LocalPartyType.
func Service() LocalPartyType {
	return LocalPartyType{
		name: "service",
	}
}

// String returns the LocalPartyType's name.
func (l LocalPartyType) String() string {
	return l.name
}

// MarshalText encodes the receiver into textual form.
func (l LocalPartyType) MarshalText() (text []byte, err error) {
	return []byte(l.String()), nil
}

// UnmarshalText decodes the receiver from its textual form.
func (l *LocalPartyType) UnmarshalText(text []byte) error {
	v, err := NewLocalPartyType(string(text))
	if err != nil {
		return err
	}
	*l = v
	return nil
}
