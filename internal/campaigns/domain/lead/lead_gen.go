// Code generated by ddd-domain-gen, DO NOT EDIT.
package lead

import (
	"errors"
	address "github.com/Boostport/address"
	phonenumbers "github.com/nyaruka/phonenumbers"
	"net/mail"
	"reflect"
)

// Generators ...

// New returns a guaranteed-to-be-valid Lead or an error
func New(uuid string, name string, selfIdentifier string, statusCode leadStatusCode, resultSentinel string, address address.Address, mail mail.Address, numbers []phonenumbers.PhoneNumber, gender string, birthday string, comment string) (*Lead, error) {
	if reflect.ValueOf(uuid).IsZero() {
		return nil, errors.New("missing lead UUID")
	}
	if reflect.ValueOf(name).IsZero() {
		return nil, errors.New("missing lead name")
	}
	l := &Lead{
		address:        address,
		birthday:       birthday,
		comment:        comment,
		gender:         gender,
		mail:           mail,
		name:           name,
		numbers:        numbers,
		resultSentinel: resultSentinel,
		selfIdentifier: selfIdentifier,
		statusCode:     statusCode,
		uuid:           uuid,
	}
	return l, nil
}

// MustNew returns a guaranteed-to-be-valid Lead or panics
func MustNew(uuid string, name string, selfIdentifier string, statusCode leadStatusCode, resultSentinel string, address address.Address, mail mail.Address, numbers []phonenumbers.PhoneNumber, gender string, birthday string, comment string) *Lead {
	l, err := New(uuid, name, selfIdentifier, statusCode, resultSentinel, address, mail, numbers, gender, birthday, comment)
	if err != nil {
		panic(err)
	}
	return l
}

// Marshalers ...

// UnmarshalFromRepository unmarshals Lead from the repository so that non-constructable
// private fields can still be initialized from (private) repository state
//
// Important: DO NEVER USE THIS METHOD EXCEPT FROM THE REPOSITORY
// Reason: This method initializes private state, so you could corrupt the domain.
func UnmarshalFromRepository(uuid string, name string, selfIdentifier string, statusCode leadStatusCode, resultSentinel string, address address.Address, mail mail.Address, numbers []phonenumbers.PhoneNumber, gender string, birthday string, comment string) *Lead {
	l := MustNew(uuid, name, selfIdentifier, statusCode, resultSentinel, address, mail, numbers, gender, birthday, comment)
	return l
}
