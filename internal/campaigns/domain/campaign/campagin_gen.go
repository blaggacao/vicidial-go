// Code generated by ddd-domain-gen, DO NOT EDIT.
package campaign

import (
	"errors"
	lead "github.com/xoe-labs/vicidial-go/internal/campaigns/domain/lead"
	"reflect"
)

// Generators ...

// New returns a guaranteed-to-be-valid Campaign or an error
func New(uuid string, name string, callerId string, leads []lead.Lead, doNotCall []lead.Lead, availableResultSentinels []string, routeUUID string) (*Campaign, error) {
	if reflect.ValueOf(uuid).IsZero() {
		return nil, errors.New("missing campaign UUID")
	}
	if reflect.ValueOf(name).IsZero() {
		return nil, errors.New("missing campaign name")
	}
	c := &Campaign{
		availableResultSentinels: availableResultSentinels,
		callerId:                 callerId,
		doNotCall:                doNotCall,
		leads:                    leads,
		name:                     name,
		routeUUID:                routeUUID,
		uuid:                     uuid,
	}
	return c, nil
}

// MustNew returns a guaranteed-to-be-valid Campaign or panics
func MustNew(uuid string, name string, callerId string, leads []lead.Lead, doNotCall []lead.Lead, availableResultSentinels []string, routeUUID string) *Campaign {
	c, err := New(uuid, name, callerId, leads, doNotCall, availableResultSentinels, routeUUID)
	if err != nil {
		panic(err)
	}
	return c
}

// Marshalers ...

// UnmarshalFromRepository unmarshals Campaign from the repository so that non-constructable
// private fields can still be initialized from (private) repository state
//
// Important: DO NEVER USE THIS METHOD EXCEPT FROM THE REPOSITORY
// Reason: This method initializes private state, so you could corrupt the domain.
func UnmarshalFromRepository(uuid string, name string, callerId string, leads []lead.Lead, doNotCall []lead.Lead, availableResultSentinels []string, routeUUID string, active bool) *Campaign {
	c := MustNew(uuid, name, callerId, leads, doNotCall, availableResultSentinels, routeUUID)
	c.active = active
	return c
}
